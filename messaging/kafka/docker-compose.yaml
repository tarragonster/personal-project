version: "3.8"
services:
  zookeeper-1:
    container_name: zookeeper-1
    image: tarragonster/zookeeper:2.7.0
    build:
      context: ./zookeeper
    volumes:
      - ./config/zookeeper-1/zookeeper.properties:/kafka/config/zookeeper.properties
      - ./data/zookeeper-1/:/tmp/zookeeper/
    networks:
      - kafka
  kafka-1:
    container_name: kafka-1
    image: tarragonster/kafka:2.7.0
    build:
      context: .
    volumes:
      - ./config/kafka-1/server.properties:/kafka/config/server.properties
      - ./data/kafka-1/:/tmp/kafka-logs/
    networks:
      - kafka
  kafka-2:
    container_name: kafka-2
    image: tarragonster/kafka:2.7.0
    build:
      context: .
    volumes:
      - ./config/kafka-2/server.properties:/kafka/config/server.properties
      - ./data/kafka-2/:/tmp/kafka-logs/
    networks:
      - kafka
  kafka-3:
    container_name: kafka-3
    image: tarragonster/kafka:2.7.0
    build:
      context: .
    volumes:
      - ./config/kafka-3/server.properties:/kafka/config/server.properties
      - ./data/kafka-3/:/tmp/kafka-logs/
    networks:
      - kafka
  kafka-producer:
    container_name: kafka-producer
    image: tarragonster/kafka:2.7.0
    build:
      context: .
    working_dir: /kafka
    entrypoint: /bin/bash
    stdin_open: true
    tty: true
    networks:
      - kafka
  kafka-consumer:
    container_name: kafka-consumer
    image: tarragonster/kafka:2.7.0
    build:
      context: .
    working_dir: /kafka
    entrypoint: /bin/bash
    stdin_open: true
    tty: true
    networks:
      - kafka
  kafka-consumer-go:
    container_name: kafka-consumer-go
    image: tarragonster/kafka-consumer-go:1.0.0
    build:
      context: ./applications/consumer
    environment:
      - "KAFKA_PEERS=kafka-1:9092,kafka-2:9092,kafka-3:9092"
      - "KAFKA_TOPIC=Orders"
      - "KAFKA_VERSION=2.7.0"
      - "KAFKA_GROUP=orders"
    networks:
      - kafka
networks:
  kafka:
    name: kafka